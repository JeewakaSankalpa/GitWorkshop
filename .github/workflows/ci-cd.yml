name: Spring Boot CI/CD Pipeline with Gradle

on:
  push:
    branches: [ dev, main ]
  pull_request:
    branches: [ dev ]

jobs:
  build-test:
    name: Build & Test with Gradle
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Java 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Grant execute permission to Gradle wrapper
      run: chmod +x gradlew

    - name: Build and Test
      run: ./gradlew clean build

    - name: Run Linter (Checkstyle or SpotBugs)
      run: ./gradlew check

    - name: Upload Coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        files: build/reports/jacoco/test/jacocoTestReport.xml
        fail_ci_if_error: true
        token: ${{ secrets.CODECOV_TOKEN }}

    - name: Trivy Security Scan (Filesystem)
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: fs
        scan-ref: .

  docker-deploy:
    name: Build & Push Docker Image
    runs-on: ubuntu-latest
    needs: build-test
    if: github.ref == 'refs/heads/main'

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and Push Docker Image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/springboot-gradle-app:latest

    - name: Trivy Security Scan (Docker Image)
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: ${{ secrets.DOCKER_USERNAME }}/springboot-gradle-app:latest
